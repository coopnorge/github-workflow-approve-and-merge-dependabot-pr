---
name: Approve and merge Dependabot PR
on:
  workflow_call:
    inputs:
      merge-strategy:
        type: string
        required: false
        default: squash and merge
        description: |
          Strategy type to use when Dependabot merges the PR.
          Check https://docs.github.com/en/code-security/dependabot/working-with-dependabot/managing-pull-requests-for-dependency-updates#managing-dependabot-pull-requests-with-comment-commands
      approve-condition:
          type: string
          required: false
          default: |
            (
                needs.dependabot-fetch-metadata.outputs.package-ecosystem == 'docker' &&
                startsWith(needs.dependabot-fetch-metadata.outputs.dependency-names, 'coopnorge/engineering-docker-images/e0')
            ) || (
                needs.dependabot-fetch-metadata.outputs.package-ecosystem == 'pip' &&
                needs.dependabot-fetch-metadata.outputs.update-type == 'version-update:semver-patch'
            )
          description: |
            Conditional statement used to approve PR
    secrets:
      reviewbot-github-token:
        required: true
        description: |
          GitHub token with permission to approve the PR (usually secrets.REVIEWBOT_GITHUB_TOKEN )

jobs:
  dependabot-fetch-metadata:
    name: Fetch metadata of Dependabot update
    runs-on: "ubuntu-latest"
    if: ${{ github.actor == 'dependabot[bot]' }}
    outputs:
      package-ecosystem: ${{ steps.dependabot-metadata.outputs.package-ecosystem }}
      dependency-names: ${{ steps.dependabot-metadata.outputs.dependency-names }}
      update-type: ${{ steps.dependabot-metadata.outputs.update-type }}
    steps:
      - id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.3.3

  merge-dependabot:
    needs:
      - dependabot-fetch-metadata
    runs-on: "ubuntu-latest"
    if: |
        ${{ inputs.approve-condition }}}
    env:
      GH_TOKEN: ${{ secrets.reviewbot-github-token }}
    steps:
      - run: |
          gh pr review --approve --body "@dependabot ${{ inputs.merge-strategy }}" --repo ${{ github.repository }} ${{ github.event.number }}
